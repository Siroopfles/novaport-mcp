name: Run Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      - name: Install dependencies (cache hit)
        if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'
        run: poetry install --no-interaction --no-ansi

      - name: Run linter
        run: poetry run ruff check .

      - name: Run type checker
        run: poetry run mypy src/novaport_mcp tests

      - name: Run formatter check
        run: poetry run black --check .

      - name: Run tests with coverage
        run: poetry run pytest --cov=novaport_mcp --cov-fail-under=80 --cov-report=xml --cov-report=html --cov-report=term-missing

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
            .coverage

      - name: Upload coverage to Codecov
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Optional
          file: ./coverage.xml
          fail_ci_if_error: true # Optional